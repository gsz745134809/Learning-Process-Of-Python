# 单例设计模式

# 目的 -- 让 类 创建的对象，在系统中 只有 唯一的实例
# 每一次执行 类名() 返回的对象，内存地址时相同的



# 02、__new__ 方法 
"""
。使用 类名() 创建对象时，Python的解释器首先会调用 __new__ 方法为对象分配空间
。__new__ 是一个由 object 基类提供的内置的静态方法，主要作用有两个：
	、1、在内存中为对象分配空间
	、2、返回对象的引用
。Python的解释器获得对象的引用后，将引用作为第一个参数，传递给 __init__ 方法
。| 重写 __new__ 方法的代码非常固定！
。重写 __new__ 方法一定要 return super().__new__(cls)
。否则Python的解释器得不到 分配了空间的对象引用，就不会调用对象的初始化方法
。注意： __new__ 是一个静态方法，在调用时需要 主动传递 cls 参数

"""



# 03、Python中的单例
"""
。单例 -- 让 类 创建的对象，在系统中 只有 唯一的一个实例
	1、定义一个 类属性，初始值是 None，用于记录 单例对象的引用
	2、重写 __new__ 方法
	3、如果类属性 is None，调用父类方法分配空间，并在类属性中记录结果
	4、返回类属性中记录的对象引用


"""



























