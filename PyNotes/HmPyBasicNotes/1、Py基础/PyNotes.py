# 字符串变量 = input("提示信息：")
# 用户输入的 任何内容 Python都认为是一个 字符串
password = input("请输入密码：")



# 类型转换函数

int(x)  # 将x转换为一个整数

float(x) # 将x转换到一个浮点数



# 格式化输出
# %被称为格式化操作符
""" 
	%s  字符串
	%d  有符号十进制整数， %06d表示输出的整数显示位数，不足的地方用0补全
	%f  浮点数，%.02f表示小数点后只显示两位
	%%  输出%
"""

print("格式化字符串" % 变量1)

print("格式化字符串" % (变量1,变量2...))

print("我的名字叫：%s ，请多多关照！" % name)



# Python标识符
# 由字母，下划线，和数字组成
# 不能以数字开头
# 不能与关键字重名
# 区分大小写

# 等号左右各保留一个空格（key = word）
# 两个单词以上的用 下划线 连接，都用小写字母
# 其他语言：驼峰命名法（小驼峰/大驼峰）

# Python建议用4个空格代替Tab
# Tab和空格不要混用

# PyCharm多行注释：Ctrl+/
# PyCharm多行缩进：Tab
# PyCharm多行退格：Shift+Tab


# 逻辑运算 与 and /  或 or  /  非 not

条件1 and 条件2   # 条件1和条件2 同时成立才成立

条件1 or 条件2   # 条件1和条件2 其中只要有一个成立就成立

not 条件   # 取反



# Python随机数

import random
random.randint(a,b)  # 返回[a,b]之间的整数，包含a和b




# while语句

# 初始条件设置 --通常是重复执行的 计数器

while 条件(判断 计数器 是否达到 目标次数):
	条件满足时，做的事情1
	条件满足时，做的事情2
	条件满足时，做的事情3
	...(省略)...
	
	处理条件(计数器 + 1)
	


# print函数

# 向控制台输出内容结束之后，不会换行
print("*",end="")
# end="" 表示向控制台输出内容结束之后，不会换行

# 单纯的换行
print("")




# 字符串中的转义字符
# \t  在控制台输出一个 制表符 ，协助在输出文本时 垂直方向 保持对齐
# \n  在控制台输出一个 换行符

# 制表符的功能是在不使用表格的情况下在 垂直方向 按列对齐文本

"""
\\ 反斜杠符号
\' 单引号
\" 双引号
\n 换行
\t 横向制表符
\r 回车
"""















